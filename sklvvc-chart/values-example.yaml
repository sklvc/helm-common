replicaCount: 1

image: 
  repository: ""
  tag: ""
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: service

rbac:
  create: false

containerPort: 1080

securityContext: {}
  # runAsUser: 1000
  # fsGroup: 1000

command:
 enabled: false
 cli: '["/bin/bash", "-c"]'
 args: '[""]'

migrate:
 enabled: false
 cli: '["/bin/bash", "-c"]'
 args: '[""]'

configfile:
  enabled: false
  config: |
    
## Если есть серты в виде фалой включи это блок
secretfile:  
   enabled: false
### secrets env   
secrets:
  enabled: false

configs: 
  enabled: true


resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

livenessProbe: {}
#  httpGet:
#    path: /health
#    port: http
#  initialDelaySeconds: 300
#  periodSeconds: 10
readinessProbe: {}
#  httpGet:
#    path: /health
#    port: http
#  initialDelaySeconds: 60
#  periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}

service:
  enabled: true
  httpPort: 8000
  targetPort: 3000
  type: ClusterIP

servicews:
  enabled: false
  httpPort: 1080
# nodePort: 32015

  type: ClusterIP
ingress:
  enabled: false
  annotations:
     cert-manager.io/cluster-issuer: "infra"     
     kubernetes.io/ingress.class: nginx
     kubernetes.io/tls-acme: 'true'

  hosts:
    - 

podDisruptionBudget:
  enabled: false
  minAvailable: 1
